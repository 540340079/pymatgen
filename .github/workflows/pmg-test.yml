name: Testing

on: [push, pull_request]

jobs:
  build:

    strategy:
      max-parallel: 20
      matrix:
        os: [macos-latest]
        python-version: [3.8]
        pkg: [analysis, others]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-optional.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        echo "GULP_LIB=`pwd`/cmd_line/gulp/Libraries" >> $GITHUB_ENV
        echo "PMG_TEST_FILES_DIR=`pwd`/test_files" >> $GITHUB_ENV
        pip install --upgrade pip wheel
        pip install -r requirements.txt
        pip install -r requirements-optional.txt
        pip install -r requirements-dev.txt
        pip install -e .
    - name: pytest ${{ matrix.pkg }}
      if: matrix.pkg != 'others'
      env:
        PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}
        MPLBACKEND: "Agg"
      run: |
        pytest pymatgen/${{ matrix.pkg }} -rxXs --color=yes
    - name: pytest others
      if: matrix.pkg == 'others'
      env:
        PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}
        MPLBACKEND: "Agg"
      run: |
        pytest pymatgen -rxXs --color=yes --ignore=pymatgen/analysis