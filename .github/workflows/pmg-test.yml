name: Testing

on: [push, pull_request]

jobs:
  build:

    strategy:
      max-parallel: 20
      matrix:
        os: [macos-latest]
        python-version: [3.8]
        pkg: [analysis, command_line, ext, io, others]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-optional.txt
        pip install -r requirements-dev.txt
        pip install -e .
    - name: pytest
      if: matrix.pkg != 'others'
      env:
        PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}
        MPLBACKEND: "Agg"
        PMG_TEST_FILES_DIR: "test_files"
        GULP_LIB: "cmd_line/gulp/Libraries"
      run: |
        echo "PATH=$PATH"
        pytest pymatgen/${{ matrix.pkg }} -rxXs --color=yes
    - name: pytest others
      if: matrix.pkg == 'others'
      env:
        PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}
        MPLBACKEND: "Agg"
        PMG_TEST_FILES_DIR: "test_files"
        GULP_LIB: "cmd_line/gulp/Libraries"
      run: |
        echo "PATH=$PATH"
        pytest pymatgen --ignore=pymatgen/analysis,pymatgen/command_line,pymatgen/ext,pymatgen/io  -rxXs --color=yes